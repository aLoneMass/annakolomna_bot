from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.filters import Command

from bot.services.calendar import generate_calendar_image
from bot.services.events import get_all_events
from bot.keyboards.event_nav import get_event_navigation_keyboard_with_signup

router = Router()

# üìÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /schedule
@router.message(Command("schedule"))
async def handle_schedule_command(message: Message):
    await send_schedule(message)


# üìÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π"
@router.message(F.text == "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π")
async def handle_schedule_text_button(message: Message):
    await send_schedule(message)


# üìÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è inline-–∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
@router.callback_query(F.data == "show_schedule")
async def handle_schedule_callback(callback: CallbackQuery):
    await send_schedule(callback.message)
    await callback.answer()


# üß† –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∏ –ø–µ—Ä–≤–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
async def send_schedule(message: Message):
    #calendar_path = generate_calendar_image()
    #calendar_file = FSInputFile(calendar_path)

    #await message.answer_photo(
    #    photo=calendar_file,
    #    caption="üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü"
    #)

    events = get_all_events()
    if not events:
        await message.answer("–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.")
        return

    index = 0
    event = events[index]
    event_id, photo_path, description, date, time, location, payment_link, qr_path = event

    caption = (
        f"üìå <b>{description}</b>\n"
        f"üóì <b>{date}</b> –≤ <b>{time}</b>\n"
        f"üìç <a href=\"{location}\">–ê–¥—Ä–µ—Å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</a>"
    )
    photo_file = FSInputFile(photo_path)
    keyboard = get_event_navigation_keyboard_with_signup(index, len(events))

    await message.answer_photo(
        photo=photo_file,
        caption=caption,
        reply_markup=keyboard,
        parse_mode="HTML"
    )
