from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from schedule import get_dates_for_event


def get_event_navigation_keyboard(index: int, total: int, event_id: int) -> InlineKeyboardMarkup:

    dates = get_dates_for_event(event_id)

    date_buttons = [
        [InlineKeyboardButton(text=f"üìÖ {d}", callback_data=f"date_{event_id}_{d}")]
        for d in dates
    ]
    buttons = []
    nav_row = []
    if total-1 == 0:
        print('–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –æ–¥–Ω–æ, –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º')
    elif (index == 0) and (index < total - 1):
        nav_row.append(InlineKeyboardButton(text="‚ñ∂Ô∏è –î–∞–ª–µ–µ", callback_data=f"next_{index}"))
    elif (index > 0) and (index < total-1):
        nav_row.append(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"prev_{index}"))
        nav_row.append(InlineKeyboardButton(text="‚ñ∂Ô∏è –î–∞–ª–µ–µ", callback_data=f"next_{index}"))
    elif (index == total-1) and (total > 0):
        nav_row.append(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"prev_{index}"))
    buttons.append(nav_row)

    # buttons.append([
    #     InlineKeyboardButton(text="‚úÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data=f"signup_event:{event_id}")
    # ])
    buttons.append([
        InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="close")
    ])

    return InlineKeyboardMarkup(inline_keyboard=date_buttons + [buttons] if buttons else date_buttons)

